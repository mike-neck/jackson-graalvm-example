/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.example;

import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.ObjectWriter;
import com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.lang.invoke.MethodHandles;
import java.nio.charset.StandardCharsets;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

public interface App {

    static void main(String[] args) {
        try {
            App app = newAppFactory(args).createApp();
            JsonNode jsonNode = app.readYaml(System.in);
            String json = app.toJson(jsonNode);
            System.out.println(json);
            System.exit(0);
        } catch (IOException e) {
            System.out.println(e.getMessage());
            System.exit(1);
        }
    }

    private static AppFactory newAppFactory(String... params) {
        List<String> arguments = Arrays.stream(params)
                .map(String::toLowerCase).collect(Collectors.toUnmodifiableList());
        boolean pretty = arguments.contains("-p");
        boolean useProxy = arguments.contains("-x");
        return AppFactory.getInstance(pretty, useProxy, MethodHandles.lookup());
    }

    default JsonNode readYaml(InputStream inputStream) throws IOException {
        ObjectMapper objectMapper = new ObjectMapper(new YAMLFactory());
        return objectMapper.readTree(new InputStreamReader(inputStream, StandardCharsets.UTF_8));
    }

    default String toJson(JsonNode jsonNode) throws IOException {
        ObjectWriter objectWriter = objectWriter();
        return objectWriter.writeValueAsString(jsonNode);
    }

    ObjectWriter objectWriter();
}
